name: deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy to Hetzner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Terraform Init
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        run: cd hetzner && terraform init
      - name: Terraform Apply
        env:
          TF_VAR_HCLOUD_TOKEN: ${{ secrets.TF_VAR_HCLOUD_TOKEN }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        run: cd hetzner && terraform apply -auto-approve
      - name: Accept ssh keys
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        run: mkdir $HOME/.ssh && touch $HOME/.ssh/known_hosts && cd hetzner && ./terraform-swarm-inventory.py --accept

      - name: Run ansible and setup docker
        env:
          TF_VAR_HCLOUD_TOKEN: ${{ secrets.TF_VAR_HCLOUD_TOKEN }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        run: cd ansible && ansible-playbook -i ../hetzner/terraform-swarm-inventory.py cluster_setup.yml
      - name: Run ansible and setup swarm
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        run: cd ansible && ansible-playbook -i ../hetzner/terraform-swarm-inventory.py swarm_setup.yml
